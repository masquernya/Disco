// <auto-generated />
using System;
using Disco.Web.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Disco.Web.Migrations
{
    [DbContext(typeof(DiscoContext))]
    [Migration("20230322214516_AddAvatarsGenderAgePronoun")]
    partial class AddAvatarsGenderAgePronoun
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.4");

            modelBuilder.Entity("Disco.Web.Data.Account", b =>
                {
                    b.Property<long>("accountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("age")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("displayName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("gender")
                        .HasColumnType("TEXT");

                    b.Property<string>("pronouns")
                        .HasColumnType("TEXT");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("accountId");

                    b.ToTable("accounts");
                });

            modelBuilder.Entity("Disco.Web.Data.AccountAvatar", b =>
                {
                    b.Property<long>("accountAvatarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("accountId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("source")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("updatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("url")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("accountAvatarId");

                    b.HasIndex("accountId")
                        .IsUnique();

                    b.ToTable("accountAvatars");
                });

            modelBuilder.Entity("Disco.Web.Data.AccountDescription", b =>
                {
                    b.Property<long>("accountDescriptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("accountId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("description")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("updatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("accountDescriptionId");

                    b.HasIndex("description")
                        .IsUnique();

                    b.ToTable("accountDescriptions");
                });

            modelBuilder.Entity("Disco.Web.Data.AccountDiscord", b =>
                {
                    b.Property<long>("accountDiscordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("accountId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("avatarUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("TEXT");

                    b.Property<long>("discordId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("tag")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("updatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("accountDiscordId");

                    b.ToTable("accountDiscords");
                });

            modelBuilder.Entity("Disco.Web.Data.AccountPassword", b =>
                {
                    b.Property<long>("accountPasswordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("accountId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("hash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("updatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("accountPasswordId");

                    b.HasIndex("accountId")
                        .IsUnique();

                    b.ToTable("accountPasswords");
                });

            modelBuilder.Entity("Disco.Web.Data.AccountRelationship", b =>
                {
                    b.Property<long>("accountRelationshipId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("accountId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("otherAccountId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("relationship")
                        .HasColumnType("INTEGER");

                    b.HasKey("accountRelationshipId");

                    b.HasIndex("accountId");

                    b.ToTable("accountRelationships");
                });

            modelBuilder.Entity("Disco.Web.Data.AccountSession", b =>
                {
                    b.Property<string>("accountSessionId")
                        .HasColumnType("TEXT");

                    b.Property<long>("accountId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("updatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("accountSessionId");

                    b.ToTable("accountSessions");
                });

            modelBuilder.Entity("Disco.Web.Data.AccountTag", b =>
                {
                    b.Property<long>("accountTagId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("accountId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("displayTag")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("tag")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("accountTagId");

                    b.HasIndex("accountId");

                    b.HasIndex("accountId", "tag")
                        .IsUnique();

                    b.ToTable("accountTags");
                });
#pragma warning restore 612, 618
        }
    }
}
